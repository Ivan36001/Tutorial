package Многопоточность;
//выполнение потоков никак не синхронизированно(псевдопараллелдизм-потоки борятся за процессорное время)
//Первый метод создания потока: унаследоватся от класса Thread, переопределить метод run(),
//создать поток в методе main()  и запустить его методом start() (выполнение run() начнется через неопределенное
//время
//Метод sleep это статический метод класса Thread, т.е. он не привязан ни к какому объекту.
// Цель этого метода, чтобы программа «заснула» на некоторое время.
public class Thread1 {
    public static void main(String[] args) throws InterruptedException {
        MyThread myThread=new MyThread();//создание потока
        myThread.start();//вызов потока который отпочковывается от основного потока main
        Thread.sleep(7000);//первый поток выводим в лидеры (проходит 7 сек. до старта второго потока)
        //при этом первый поток будет выполняться
        MyThread myThread2=new MyThread();
        myThread2.start();
    }
}
class MyThread extends Thread {// первый способ создания потока, теперь мой класс это поток
   public void run() {//переопределяем метод
       for (int i=0;i<100;i++) {
           try {
               Thread.sleep(100);//заставляет поток уснуть принимает на вход время в миллисикундах
           } catch (InterruptedException e) {
               e.printStackTrace();
           }
           System.out.println("Привет из моего потока"+i);
       }
   }
}